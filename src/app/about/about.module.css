.container {
  position: relative;
  min-height: calc(100vh - 64px);
  padding: 4rem 0;
  /* Removed overflow: hidden to allow scrolling */
}

.starryBackground {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(ellipse at top, #102154 0%, #040720 70%);
  background-size: 200% 200%;
  animation: gradientBg 30s ease infinite;
  z-index: -10;
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -5;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background-color: #fff;
  border-radius: 50%;
  opacity: 0;
  animation: twinkle var(--duration) ease-in-out infinite;
  animation-delay: var(--delay);
}

@keyframes twinkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    opacity: var(--opacity);
    transform: scale(var(--scale));
  }
}

.pageTitle {
  text-align: center;
  font-size: 3.2rem;
  font-weight: 700;
  color: white;
  margin-bottom: 3rem;
  position: relative;
  z-index: 1;
  text-shadow: 0 0 20px rgba(112, 165, 253, 0.4);
  letter-spacing: 2px;
}

.pageTitle:after {
  content: '';
  position: absolute;
  bottom: -0.5rem;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 3px;
  background: linear-gradient(90deg, rgba(112, 165, 253, 0), rgba(112, 165, 253, 0.8), rgba(112, 165, 253, 0));
}

.glassCard {
  background: rgba(15, 23, 42, 0.3);
  backdrop-filter: blur(10px);
  border-radius: 1rem;
  border: 1px solid rgba(112, 165, 253, 0.15);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1), 0 0 20px rgba(30, 64, 175, 0.05);
  overflow: hidden;
  transition: all 0.4s ease;
  width: 100%;
  max-width: 900px;
  margin: 2rem auto;
  transform-style: preserve-3d;
  perspective: 1000px;
  position: relative;
}

.glassCard:hover {
  transform: translateY(-5px) scale(1.01);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15), 0 0 20px rgba(112, 165, 253, 0.2);
  border-color: rgba(112, 165, 253, 0.3);
}

.glassCard:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    rgba(112, 165, 253, 0.1) 0%,
    rgba(15, 23, 42, 0) 70%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
  z-index: 1;
  pointer-events: none;
}

.glassCard:hover:before {
  opacity: 1;
}

@keyframes gradientBg {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@media (max-width: 768px) {
  .glassCard {
    padding: 0.75rem;
  }

  .avatarContainer {
    width: 100px;
    height: 100px;
    border-width: 3px;
  }

  .statsContainer {
    grid-template-columns: 1fr;
    padding: 1rem;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .glassCard {
    max-width: 90%;
    padding: 1.5rem;
  }
}

@media (min-width: 1025px) {
  .glassCard {
    padding: 2rem;
  }
}

.cardHeader {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding: 2rem;
  border-bottom: 1px solid rgba(112, 165, 253, 0.1);
  position: relative;
  overflow: hidden;
}

.cardHeader::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right,
    rgba(30, 58, 138, 0.1) 0%,
    rgba(30, 64, 175, 0.05) 100%
  );
  z-index: 0;
  pointer-events: none;
}

@media (min-width: 640px) {
  .cardHeader {
    flex-direction: row;
    gap: 2rem;
    padding: 2.5rem;
  }
}

.avatarWrapper {
  position: relative;
  margin-right: 2rem;
  flex-shrink: 0;
  align-self: center;
  z-index: 2;
}

.statusIndicator {
  position: absolute;
  bottom: 5px;
  right: 5px;
  width: 12px;
  height: 12px;
  background: #22c55e;
  border-radius: 50%;
  border: 2px solid rgba(255, 255, 255, 0.9);
  box-shadow: 0 0 8px rgba(34, 197, 94, 0.5);
  z-index: 3;
}

.avatarContainer {
  width: 130px;
  height: 130px;
  position: relative;
  border-radius: 1rem;
  overflow: hidden;
  border: 2px solid rgba(112, 165, 253, 0.3);
  box-shadow: 0 0 25px rgba(30, 64, 175, 0.2);
  margin: 0 auto;
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: all 0.4s ease;
}

.avatarContainer::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    rgba(112, 165, 253, 0.2),
    rgba(15, 23, 42, 0)
  );
  z-index: 1;
  opacity: 0;
  transition: opacity 0.4s ease;
}

.avatarContainer:hover::before {
  opacity: 1;
}

.avatarContainer::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    transparent,
    rgba(255, 255, 255, 0.05),
    transparent
  );
  transform: rotate(30deg);
  animation: avatarShine 6s ease-in-out infinite;
  pointer-events: none;
}

@keyframes avatarShine {
  0% {
    transform: translateX(-100%) rotate(25deg);
  }
  20%, 100% {
    transform: translateX(100%) rotate(25deg);
  }
}

.avatarContainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.avatarContainer:hover {
  border-color: rgba(112, 165, 253, 0.6);
  box-shadow: 0 0 30px rgba(30, 64, 175, 0.3);
}

.avatarContainer:hover img {
  transform: scale(1.05);
}

@media (min-width: 1024px) {
  .avatarContainer {
    width: 150px;
    height: 150px;
    border-width: 5px;
  }
}

.profileInfo {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-width: 0;
  position: relative;
  z-index: 2;
  padding: 0.5rem;
}

.statsContainer {
  display: flex;
  gap: 2rem;
  margin-top: 1.5rem;
  position: relative;
}

.stat {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  position: relative;
  transition: transform 0.3s ease;
}

.stat:hover {
  transform: translateY(-2px);
}

.profileLink, .repoLink {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.25rem;
  background: rgba(30, 58, 138, 0.2);
  backdrop-filter: blur(4px);
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  border: 1px solid rgba(112, 165, 253, 0.2);
  color: white;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.profileLink:hover, .repoLink:hover {
  background: rgba(30, 58, 138, 0.3);
  transform: translateY(-3px);
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15), 0 0 5px rgba(112, 165, 253, 0.3);
  border-color: rgba(112, 165, 253, 0.4);
}

.expandButton {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  margin-top: 1.5rem;
  background: rgba(30, 58, 138, 0.15);
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  border: 1px solid rgba(112, 165, 253, 0.1);
  color: white;
}

.expandButton:hover {
  background: rgba(30, 58, 138, 0.25);
  border-color: rgba(112, 165, 253, 0.3);
}

.expandSection {
  background: rgba(10, 15, 30, 0.2);
  backdrop-filter: blur(5px);
  overflow: hidden;
  transition: all 0.5s ease;
  border-top: 1px solid rgba(112, 165, 253, 0.1);
}

.projectsList {
  margin-top: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.projectGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: 1.5rem;
  padding: 2rem;
}

.projectCard {
  background: rgba(15, 23, 42, 0.4);
  border-radius: 0.75rem;
  padding: 1.5rem;
  border: 1px solid rgba(112, 165, 253, 0.15);
  transition: all 0.4s ease;
  position: relative;
  overflow: hidden;
}

.projectCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    rgba(112, 165, 253, 0.1),
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
  z-index: 0;
  pointer-events: none;
}

.projectCard:hover::before {
  opacity: 1;
}

.projectCard:hover {
  transform: translateY(-5px) scale(1.02);
  background: rgba(15, 23, 42, 0.5);
  border-color: rgba(112, 165, 253, 0.3);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1), 0 0 10px rgba(112, 165, 253, 0.1);
}

.demoButton {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.6rem 1rem;
  background: rgba(30, 64, 175, 0.25);
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  margin-top: 1rem;
  border: 1px solid rgba(112, 165, 253, 0.2);
  color: white;
}

.demoButton:hover {
  background: rgba(30, 64, 175, 0.4);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(30, 64, 175, 0.2);
  border-color: rgba(112, 165, 253, 0.4);
}

.githubButton {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.6rem 1rem;
  background: rgba(15, 23, 42, 0.4);
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  border: 1px solid rgba(112, 165, 253, 0.2);
  color: white;
}

.githubButton:hover {
  background: rgba(15, 23, 42, 0.6);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
  border-color: rgba(112, 165, 253, 0.4);
}

@media (max-width: 768px) {
  .cardHeader {
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 1rem;
  }

  .statsContainer {
    justify-content: center;
  }

  .projectGrid {
    grid-template-columns: 1fr;
  }
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 1.25rem;
  margin-top: 1.5rem;
}

.statCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 1.25rem 1rem;
  background: rgba(15, 23, 42, 0.4);
  border-radius: 0.75rem;
  border: 1px solid rgba(112, 165, 253, 0.15);
  transition: all 0.4s ease;
  position: relative;
  overflow: hidden;
}

.statCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    135deg,
    rgba(112, 165, 253, 0.1) 0%,
    rgba(15, 23, 42, 0) 70%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
  pointer-events: none;
}

.statCard:hover::before {
  opacity: 1;
}

.statCard:hover {
  transform: translateY(-5px);
  border-color: rgba(112, 165, 253, 0.3);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1), 0 0 15px rgba(112, 165, 253, 0.1);
}

.languageStats {
  margin-top: 1.5rem;
  padding: 1.5rem;
  background: rgba(15, 23, 42, 0.4);
  border-radius: 0.75rem;
  border: 1px solid rgba(112, 165, 253, 0.15);
  transition: all 0.4s ease;
}

.languageStats:hover {
  border-color: rgba(112, 165, 253, 0.3);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1), 0 0 15px rgba(112, 165, 253, 0.1);
}

.languageBar {
  margin-bottom: 1rem;
}

.languageInfo {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.4rem;
  color: white;
}

.progressBar {
  height: 6px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 3px;
  overflow: hidden;
  position: relative;
}

.progress {
  height: 100%;
  background: linear-gradient(90deg, rgba(30, 64, 175, 0.8), rgba(112, 165, 253, 0.8));
  border-radius: 3px;
  transition: width 1s ease;
  position: relative;
}

.progress::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: progressShine 2s linear infinite;
}

@keyframes progressShine {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

.socialLinks {
  display: flex;
  gap: 1rem;
  padding: 1.25rem 1.75rem;
  border-top: 1px solid rgba(112, 165, 253, 0.1);
  background: rgba(10, 15, 30, 0.3);
}

.socialButton {
  display: inline-flex;
  align-items: center;
  gap: 0.6rem;
  padding: 0.75rem 1.25rem;
  background: rgba(30, 58, 138, 0.2);
  border-radius: 0.75rem;
  transition: all 0.3s ease;
  border: 1px solid rgba(112, 165, 253, 0.2);
  color: white;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.socialButton:hover {
  background: rgba(30, 58, 138, 0.3);
  transform: translateY(-3px);
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15), 0 0 5px rgba(112, 165, 253, 0.3);
  border-color: rgba(112, 165, 253, 0.4);
}

.badge {
  background: linear-gradient(45deg, #1e3a8a, #3b82f6);
  padding: 0.3rem 0.85rem;
  border-radius: 2rem;
  font-size: 0.875rem;
  font-weight: 500;
  border: 1px solid rgba(112, 165, 253, 0.3);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1), 0 0 5px rgba(112, 165, 253, 0.2);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.badge::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: rgba(255, 255, 255, 0.1);
  transform: rotate(30deg);
  transition: all 0.3s ease;
  opacity: 0;
}

.badge:hover::after {
  opacity: 1;
  animation: badgeShine 1.5s ease-in-out;
}

@keyframes badgeShine {
  0% {
    transform: translateX(-100%) rotate(30deg);
  }
  100% {
    transform: translateX(100%) rotate(30deg);
  }
}